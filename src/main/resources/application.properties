spring.application.name=semi

# 포트 변경 필요시
server.port=8080

# jsp 환경 설정
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp


# DB 접속 설정
# spring.datasource.dbcp2.driver-class-name=oracle.jdbc.driver.OracleDriver
# spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=bbs
spring.datasource.password=bbs

# 쿼리 mybatis 설정
mybatis.mapper-locations=classpath:mapper/**/*.xml
mybatis.configuration.map-underscore-to-camel-case=true


#404 . 500 에러 표기
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

# jdbc로그 출력 설정
# TRACE < DEBUG < INFO < WARN < ERROR < OFF
# SQL 쿼리문을 콘솔 출력한다.
logging.level.jdbc.sqlonly=off
# SQL 쿼리문 수행 시간
logging.level.jdbc.sqltiming=info 
# SQL 쿼리문 결과 확인
logging.level.jdbc.resultsettable=info
# SQL 쿼리 검사를 로그에 출력
logging.level.jdbc.audit=off
# SQL 데이터 로그
logging.level.jdbc.resultset=off
# SQL 연결 및 해제 정보
logging.level.jdbc.connection=off

# 콘솔에 정보 추가 표기
logging.pattern.console=%clr(%d{HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr([rowNumber]: %line){red} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}


# 파일설정
spring.servlet.multipart.enabled=true

spring.servlet.multipart.location=C:\\multipart\\upload_file\\temp

spring.servlet.multipart.max-file-size=100MB

spring.servlet.multipart.max-request-size=200MB

upload.path=C:\\multipart\\upload_file